#!/data/data/com.termux/files/usr/bin/bash
#Created on 16/July/2017 by Ivam3
#Last update 02/dic/2018
#
#	Var
		R='\033[1;31m'
                G='\033[1;32m'
                Y='\033[1;33m'
                B='\033[1;34m'
                M='\033[1;35m'
                C='\033[1;36m'
                W='\033[0m'
		APK=$HOME/metasploit-frameaork/lib/msf/core/payload/apk.rb
		FILE=$HOME/install-msf
		TMP_SHELL=(57 67 75 84 113)
		
Banner() {
	echo $(clear)
	printf "$C"
	echo "          -{ IbyC > Metasploit } "
	echo "   -{ SO > Android - Only for Termux } "
	echo "              -{ Adapted by } "
	printf "$G"
        echo "      =============================="
        echo "      .___.                 ______,"
        echo "      |   |__ ______   ___  \_____ \ "
        echo "      |   \ \/ /\__ \ /   \   _(__ <,"
        echo "      |   |\   / __ \| Y Y \ /      \ "
        echo "      |___| \_/ (____|__|_| /______ /"
        echo "                     \/    \/      \/ "
        echo "      ====== By ___ Cinderella ======"
        echo
printf "$C"
        echo "          [---] Join me on [---]"
        echo "[-] www.youtube.com/c/ivam3bycinderella [-]"
	echo "      [-] t.me/Ivam3byCinderella [-]"
        echo "            [-] t.me/ivam3 [-]"
        sleep 1
printf "$R"
        echo
        echo "          [---] DISCLAIMER [---]"
printf "$W"
        echo "This file will install Metasploit Framework"
        echo "             version $version
        "
        echo "   If the law is violated with it's use"
        echo "   This would be the responsibility of "
        echo "         the user who handled it"
printf "$R       [-] Use At Your Own Risk [-]"
        echo
        echo
        printf "        $C Press$G enter$C to continue$W"
        read enter
printf "$W
"
}
_MAIN_=$(cat -n $FILE | grep "SQ==" | awk '{print $1}')
Repositories() {
	Banner
	dpkg --configure -a
	apt update -y && apt upgrade -y
	apt autoremove
	apt install -y util-linux
	apt install -y autoconf util-linux bison clang coreutils axel curl findutils git apr apr-util libffi-dev libgmp-dev libpcap-dev postgresql-dev readline-dev libsqlite-dev openssl-dev libtool libxml2-dev libxslt-dev ncurses-dev pkg-config wget make ruby-dev libgrpc-dev termux-tools ncurses-utils ncurses unzip zip tar postgresql termux-elf-cleaner
	ln -sf $PREFIX/include/libxml2/libxml $PREFIX/include/
}
_MAIN_init=$(cat -n $FILE | grep "dg==" | awk '{print $1}')
Garbage() {
	if [ -d ~/metasploit-framework ]; then 
		rm -rf ~/metasploit-framework 
	fi
	find $HOME -name "*$version.tar.gz" -type f -delete
	find $HOME -name "metasploit*" -type d -exec rm -rf {} \;
}
_MAIN_middle=$(cat -n $FILE | grep "YQ==" | awk '{print $1}')
Download() {
	printf "$B"
	cd;axel --alternate https://github.com/rapid7/metasploit-framework/archive/$version.tar.gz
	tar -xf ~/metasploit-framework-$version.tar.gz
	mv ~/metasploit-framework-$version $HOME/metasploit-framework
	rm ~/metasploit-framework-$version.tar.gz
	cd ~/metasploit-framework
}
_MAIN_close=$(cat -n $FILE | grep "bQ==" | awk '{print $1}')
Gems() {
	printf "$G"
	sed '/rbnacl/d' -i Gemfile.lock
	sed '/rbnacl/d' -i metasploit-framework.gemspec
	gem update --system
	gem install bundler
	sed 's|nokogiri (1.*)|nokogiri (1.8.0)|g' -i Gemfile.lock
	gem install nokogiri -v 1.8.0 -- --use-system-libraries
	bundle install -j5
	$PREFIX/bin/find -type f -executable -exec termux-fix-shebang \{\} \;
	rm ./modules/auxiliary/gather/http_pdf_authors.rb
	if [ -e $PREFIX/bin/msfconsole ] || [ -L $PREFIX/bin/msfconsole ]; then
		rm $PREFIX/bin/msfconsole
	fi
	if [ -e $PREFIX/bin/msfvenom ] || [ -L $PREFIX/bin/msfvenom ]; then
        	rm $PREFIX/bin/msfvenom
	fi
	ln -sf $HOME/metasploit-framework/msfconsole $PREFIX/bin/
	ln -sf $HOME/metasploit-framework/msfvenom $PREFIX/bin/
	termux-elf-cleaner $PREFIX/lib/ruby/gems/2.5.0/gems/pg-0.20.0/lib/pg_ext.so
}
RuGiR() {
	printf "$C"
	wget https://raw.githubusercontent.com/ivam3/ivam3.github.io/master/master/mediafire/RuGiR -O $HOME/metasploit-framework/RuGiR
	chmod 777 ~/metasploit-framework/RuGiR
	mv $APK $APK.O
	curl https://raw.githubusercontent.com/ivam3/java/master/.embed/apk.rb -o $APK
}
_MAIN_end=$(cat -n $FILE | grep "Mw==" | awk '{print $1}')
function DataBase {
	printf "$Y
	"
	mv ~/metasploit-framework/database.yml ~/metasploit-framework/config
	cd ~//metasploit-framework/config
	mkdir -p $PREFIX/var/lib/postgresql
	initdb $PREFIX/var/lib/postgresql
	pg_ctl -D $PREFIX/var/lib/postgresql start
	createuser msf
	createdb msf_database
	sed -i "4a pg_ctl -D $PREFIX/var/lib/postgresql start" $PREFIX/etc/bash.bashrc
	sed -i "5a clear" $PREFIX/etc/bash.bashrc
}
#ENDING SCRIPT
function Chao-chao {
printf "$C

#-----THANKS TO MY MASTER CINDERELLA-----#
#                                        #
#             People don't die           #
#    If they still live in the hearts    #
#           of their loved ones          #
#       We love her ... We miss her      #
#                                        #
#-------------------RIP------------------#"
sleep 3
printf "\n$C :::::::::: Running Metasploit ::::::::::$W"

	if [ -e $PREFIX/bin/msfconsole ] && [ -e $PREFIX/bin/msfvenom ]; then
		echo
		cd $HOME/metasploit-framework
		printf "$G Let's try to run msfconsole$W"
		msfconsole
	else
		echo
		cd $HOME/metasploit-framework
		printf "$G Let's try to run msfconsole$W"
                ruby msfconsole
	fi
echo "
"
if [ -e ~/version ]; then
	rm ~/version
fi
printf "$W If msfconsole or msfvenom didn't run
please execute the file RuGiR
(Ruby Gem issues Resolved) 
to try to fix it with an other steps

$G => sh RuGiR$W
\n"
}
MSFv1() {
	for i in ${TMP_SHELL[*]}; do
		if [ $i == "$_MAIN_" ]; then
			Repositories
			MSFv2
		fi
	done
}
MSFv2() {
        for i in ${TMP_SHELL[*]}; do
                if [ $i == "$_MAIN_init" ]; then
                        Garbage
			MSFv3
                fi
        done
}
MSFv3() {
        for i in ${TMP_SHELL[*]}; do
                if [ $i == "$_MAIN_middle" ]; then
                        Download
			MSFv4
                fi
        done
}
MSFv4() {
        for i in ${TMP_SHELL[*]}; do
                if [ $i == "$_MAIN_close" ]; then
                        Gems
			RuGiR
			MSFv5
                fi
        done
}
MSFv5() {
        for i in ${TMP_SHELL[*]}; do
                if [ $i == "$_MAIN_end" ]; then
                        DataBase
			Chao-chao
                fi
        done
}
#START
until [ $PWD = /data/sdext2/data/com.termux/files/home ] || [ $PWD = /data/data/com.termux/files/home ]; do
        printf "$R\n[W]-> You are not in home directory$W\n"
        exit
done
if [ ! -e ~/version ]; then
        printf "$C[?]->$W Type the number of version do you want :\n$C[ej. 0.0.0]->$W "
        while read ANSW && [ -z $ANSW ]; do
                printf "$R[w]-> O-ops!! Join to https://t.me/Ivam3_Bot\n$W"
        done
        echo "export version=$ANSW" > ~/version
fi
source ~/version
MSFv1
#						IbyC
